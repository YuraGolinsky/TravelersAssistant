import telebot
import requests
from telebot import types

TOKEN = "YOUR_TELEGRAM_BOT_TOKEN"



bot = telebot.TeleBot(TOKEN)
chat_ids = set()

# –°–ª–æ–≤–Ω–∏–∫ –∑ –¥–∞–Ω–∏–º–∏ –ø—Ä–æ –º—ñ—Å—Ü—è –≤ —Ä—ñ–∑–Ω–∏—Ö –º—ñ—Å—Ç–∞—Ö –£–∫—Ä–∞—ó–Ω–∏
places_data = {
    "–ö–∏—ó–≤": {
        "–ì–æ—Ç–µ–ª—ñ üè®": ["Hilton Kyiv", "Premier Hotel Rus", "Fairmont Grand Hotel Kyiv"],
        "–†–µ—Å—Ç–æ—Ä–∞–Ω–∏ üçΩÔ∏è": ["–†–µ—Å—Ç–æ—Ä–∞–Ω –ú–∞—Ç—ñ—Å—Å", "Very Well Cafe", "Art Eclair"],
        "–ú–∞–≥–∞–∑–∏–Ω–∏ üè™üõí": ["–ê–¢–ë-–ú–∞—Ä–∫–µ—Ç", "Fozzy", "–≠–ö–û –º–∞—Ä–∫–µ—Ç"],
        "–¶—ñ–∫–∞–≤—ñ –º—ñ—Å—Ü—è –ö–∏—î–≤–∞ üèûÔ∏è": ["–ì–∞–ª–µ—Ä–µ—è ¬´–ü–∞—Ä—Å—É–Ω–∞¬ª", "–§–µ–æ—Ñ–∞–Ω—ñ—è", "–ö–∏—ó–≤—Å—å–∫–∏–π –≤–æ–¥–æ—Å–ø–∞–¥"]
    },
    "–û–¥–µ—Å–∞": {
        "–ì–æ—Ç–µ–ª—ñ üè®": ["Bristol Hotel", "Hotel Milano", "–û—Ç–µ–ª—å –î—é–∫"],
        "–†–µ—Å—Ç–æ—Ä–∞–Ω–∏ üçΩÔ∏è": ["Dacha", "Moondeer", "Foundation Coffee Roasters"],
        "–ú–∞–≥–∞–∑–∏–Ω–∏ üè™üõí": ["–¢–∞–≤—Ä—ñ—è –í", "–°—ñ–ª—å–ø–æ", "–ê–¢–ë-–ú–∞—Ä–∫–µ—Ç"],
        "–¶—ñ–∫–∞–≤—ñ –º—ñ—Å—Ü—è –û–¥–µ—Å–∏ üèûÔ∏è": ["–î–µ—Ä–∏–±–∞—Å—ñ–≤—Å—å–∫–∞", "–ü–æ—Ç—å–æ–º–∫—ñ–Ω—Å—å–∫—ñ —Å—Ö–æ–¥–∏", "–û–¥–µ—Å—å–∫–∏–π –æ–ø–µ—Ä–Ω–∏–π —Ç–µ–∞—Ç—Ä"]
    },
    "–•–∞—Ä–∫—ñ–≤": {
        "–ì–æ—Ç–µ–ª—ñ üè®": ["Kharkiv Palace Hotel", "Superior Golf & Spa Resort", "Hotel 19"],
        "–†–µ—Å—Ç–æ—Ä–∞–Ω–∏ üçΩÔ∏è": ["Park –ú—ñ—Å—Ç–æ", "Sandy Bar", "–¶—É–∫–∞—Ç"],
        "–ú–∞–≥–∞–∑–∏–Ω–∏ üè™üõí": ["Karavan", "–ê—à–∞–Ω", "–ú–µ—Ç—Ä–æ"],
        "–¶—ñ–∫–∞–≤—ñ –º—ñ—Å—Ü—è –•–∞—Ä–∫–æ–≤–∞ üèûÔ∏è": ["–ì–æ—Ä–æ–¥—Å–∫–∞—è –†–∞—Ç—É—à–∞", "–ì–æ—Ä–æ–¥—Å–∫–æ–π –ü–∞—Ä–∫ –ì–æ—Ä—å–∫–æ–≥–æ", "–ú—É–∑–µ–π —ñ—Å—Ç–æ—Ä—ñ—ó –•–∞—Ä–∫–æ–≤–∞"]
    },
    "–í—ñ–Ω–Ω–∏—Ü—è": {
        "–ì–æ—Ç–µ–ª—ñ üè®": ["Optima Vinnytsia Hotel", "Fenix Hotel", "Hotel France"],
        "–†–µ—Å—Ç–æ—Ä–∞–Ω–∏ üçΩÔ∏è": ["–ö–∞—Ñ–µ –ë—ñ–±–ª—ñ–æ—Ç–µ–∫–∞", "–†–µ—Å—Ç–æ—Ä–∞–Ω –ê—Ä–∏—Å—Ç–æ–∫—Ä–∞—Ç", "–†–µ—Å—Ç–æ—Ä–∞–Ω Clover"],
        "–ú–∞–≥–∞–∑–∏–Ω–∏ üè™üõí": ["–ú–µ–≥–∞–º–∞—Ä–∫–µ—Ç", "–ê–¢–ë-–ú–∞—Ä–∫–µ—Ç", "–°—ñ–ª—å–ø–æ"],
        "–¶—ñ–∫–∞–≤—ñ –º—ñ—Å—Ü—è –í—ñ–Ω–Ω–∏—Ü—ñ üèûÔ∏è": ["–ù–∞–≤—á–∞–ª—å–Ω–∏–π —Ñ–µ—Ä–º–µ—Ä—Å—å–∫–∏–π –º—É–∑–µ–π", "–°–æ–±–æ—Ä –°–≤—è—Ç–æ—ó –ú–∞—Ä—ñ—ó", "–ü–∞—Ä–∫ –ì–æ—Ä—å–∫–æ–≥–æ"]
    },
    "–õ—å–≤—ñ–≤": {
        "–ì–æ—Ç–µ–ª—ñ üè®": ["Leopolis Hotel", "Nobilis Hotel", "Bank Hotel"],
        "–†–µ—Å—Ç–æ—Ä–∞–Ω–∏ üçΩÔ∏è": ["Kryivka", "–¶—É–∫–æ—Ä RED", "Teddy Restaurant"],
        "–ú–∞–≥–∞–∑–∏–Ω–∏ üè™üõí": ["Forum Lviv", "–†—É–∫–∞–≤–∏—á–∫–∞", "–°—ñ–ª—å–ø–æ"],
        "–¶—ñ–∫–∞–≤—ñ –º—ñ—Å—Ü—è –õ—å–≤–æ–≤–∞ üèûÔ∏è": ["–†–∞—Ç—É—à–∞", "–ü–ª–æ—â–∞ –†–∏–Ω–æ–∫", "–õ—å–≤—ñ–≤—Å—å–∫–∞ –û–ø–µ—Ä–∞"]
    },
    "–£–∂–≥–æ—Ä–æ–¥": {
        "–ì–æ—Ç–µ–ª—ñ üè®": ["Hotel Kilikiya ", "Ungvarskiy Hotel ", "Hotel Europe "],
        "–†–µ—Å—Ç–æ—Ä–∞–Ω–∏ üçΩÔ∏è": ["–ö—ñ–ª—ñ–∫—ñ—è ", "–†–µ—Å—Ç–æ—Ä–∞–Ω ¬´–¢–∞—Ç–æ—à¬ª", "–î–µ—Ü–∞ —É –ù–æ—Ç–∞—Ä—è "],
        "–ú–∞–≥–∞–∑–∏–Ω–∏ üè™üõí": ["–°—ñ–ª—å–ø–æ ", "Tokyo ‚Äì —Ç–æ—Ä–≥–æ–≤–æ-—Ä–æ–∑–≤–∞–∂–∞–ª—å–Ω–∏–π –∫–æ–º–ø–ª–µ–∫—Å ", "–ê–¢–ë-–ú–∞—Ä–∫–µ—Ç"],
        "–¶—ñ–∫–∞–≤—ñ –º—ñ—Å—Ü—è –£–∂–≥–æ—Ä–æ–¥–∞ üèûÔ∏è": ["–ó–∞–∫–∞—Ä–ø–∞—Ç—Å—å–∫–∏–π –º—É–∑–µ–π —É–Ω—ñ–∫–∞–ª—å–Ω–æ—Å—Ç—ñ —Ç–∞ —Ä—ñ–¥–∫—ñ—Å–Ω–æ—Å—Ç—ñ ", "–£–∂–≥–æ—Ä–æ–¥—Å—å–∫–∏–π –∑–∞–º–æ–∫ ",
                                      "–ü–ª–æ—â–∞ –ö–æ—Ä—è—Ç–æ–≤–∏—á–∞ "]
    }
}

def get_weather(city):
    url = f"http://api.openweathermap.org/data/2.5/weather?q={city}&appid={WEATHER_API_KEY}&units=metric"
    response = requests.get(url)
    data = response.json()
    if data["cod"] == 200:
        weather_description = data["weather"][0]["description"].capitalize()
        temperature = data["main"]["temp"]
        return f"–ü–æ–≥–æ–¥–∞ –≤ {city}:\n{weather_description}, –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ üå°Ô∏è: {temperature}¬∞C"
    else:
        return "–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –ø—Ä–æ –ø–æ–≥–æ–¥—É –¥–ª—è —Ü—å–æ–≥–æ –º—ñ—Å—Ç–∞."

def create_about_button():
    about_button = types.KeyboardButton("–ü–æ–º—ñ—á–Ω–∏–∫ –ú–∞–Ω–¥—Ä—ñ–≤–Ω–∏–∫—ñ–≤ ‚ÑπÔ∏è")
    return about_button

def create_city_keyboard():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button_kiev = types.KeyboardButton("–ö–∏—ó–≤ ‚≠êÔ∏è")
    button_odessa = types.KeyboardButton("–û–¥–µ—Å–∞ ‚òÄÔ∏è üåä")
    button_kharkiv = types.KeyboardButton("–•–∞—Ä–∫—ñ–≤ üèûÔ∏è")
    button_vinnitsa = types.KeyboardButton("–í—ñ–Ω–Ω–∏—Ü—è üçá")
    button_lviv = types.KeyboardButton("–õ—å–≤—ñ–≤ üèôÔ∏è")
    button_uzhgorod = types.KeyboardButton("–£–∂–≥–æ—Ä–æ–¥ üåÉ")
    button_about = create_about_button()
    markup.add(button_kiev, button_odessa, button_kharkiv, button_vinnitsa, button_lviv, button_uzhgorod, button_about)
    return markup

def send_help(message):
    help_text = "–î–ª—è –ø–æ—á–∞—Ç–∫—É –≤–∏–±–µ—Ä—ñ—Ç—å –º—ñ—Å—Ç–æ, –∞ –ø–æ—Ç—ñ–º –æ—Ç—Ä–∏–º–∞–π—Ç–µ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –≥–æ—Ç–µ–ª—ñ, —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∏, –º–∞–≥–∞–∑–∏–Ω–∏ —Ç–∞ —Ü—ñ–∫–∞–≤—ñ –º—ñ—Å—Ü—è —Ü—å–æ–≥–æ –º—ñ—Å—Ç–∞. –©–æ–± –¥—ñ–∑–Ω–∞—Ç–∏—Å—è –ø—Ä–æ –ø–æ–≥–æ–¥—É, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à—ñ—Ç—å –Ω–∞–∑–≤—É –º—ñ—Å—Ç–∞."
    bot.send_message(message.chat.id, help_text)

# –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /help
@bot.message_handler(commands=['help'])
def send_help_message(message):
    send_help(message)

# –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑ –∫–ª—é—á–æ–≤–∏–º —Å–ª–æ–≤–æ–º "help"
@bot.message_handler(func=lambda message: "help" in message.text.lower())
def send_help_on_request(message):
    send_help(message)

# –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /start
@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.send_message(message.chat.id, "–ë–æ—Ç –∑–Ω–æ–≤—É –∞–∫—Ç–∏–≤–Ω–∏–π! –í–∏–±–µ—Ä—ñ—Ç—å –º—ñ—Å—Ç–æ:", reply_markup=create_city_keyboard())
    commands_list = "–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –∫–æ–º–∞–Ω–¥:\n/start - –≤–∏–±—Ä–∞—Ç–∏ –º—ñ—Å—Ç–æ\n/help - –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–æ–≤—ñ–¥–∫—É"
    bot.send_message(message.chat.id, commands_list)

# –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
@bot.message_handler(func=lambda message: True)
def send_places(message):
    if message.text == "–ü–æ–º—ñ—á–Ω–∏–∫ –ú–∞–Ω–¥—Ä—ñ–≤–Ω–∏–∫—ñ–≤ ‚ÑπÔ∏è":
        about_text = "–í–∞—à –≤—ñ—Ä–Ω–∏–π —Å—É–ø—É—Ç–Ω–∏–∫ –¥–ª—è –ø–æ–¥–æ—Ä–æ–∂–µ–π –ø–æ –£–∫—Ä–∞—ó–Ω—ñ! –ó–Ω–∞–π–¥—ñ—Ç—å –Ω–∞–π—Ü—ñ–∫–∞–≤—ñ—à—ñ –º–∞—Ä—à—Ä—É—Ç–∏, –¥—ñ–∑–Ω–∞–π—Ç–µ—Å—è –ø—Ä–æ —ñ—Å—Ç–æ—Ä—ñ—é —Ç–∞ –∫—É–ª—å—Ç—É—Ä—É —Ä—ñ–∑–Ω–∏—Ö —Ä–µ–≥—ñ–æ–Ω—ñ–≤ —ñ —Å—Ç–≤–æ—Ä—ñ—Ç—å –Ω–µ–ø–µ—Ä–µ–≤–µ—Ä—à–µ–Ω—ñ —Å–ø–æ–≥–∞–¥–∏ —Ä–∞–∑–æ–º —ñ–∑ –Ω–∞—à–∏–º –ø–æ–º—ñ—á–Ω–∏–∫–æ–º."
        bot.send_message(message.chat.id, about_text)
    else:
        city = message.text.split()[0]
        if city in places_data:
            reply = f"–û—Å—å —â–æ —è –∑–Ω–∞–π—à–æ–≤ –¥–ª—è –º—ñ—Å—Ç–∞ {city}:\n"
            for category, places in places_data[city].items():
                reply += f"\n{category}:\n"
                reply += "\n".join(places)
                reply += "\n"
            bot.send_message(message.chat.id, reply)
            if city == "–ö–∏—ó–≤":
                bot.send_location(message.chat.id, latitude=50.4501, longitude=30.5234)
            elif city == "–û–¥–µ—Å–∞":
                bot.send_location(message.chat.id, latitude=46.4825, longitude=30.7233)
            elif city == "–•–∞—Ä–∫—ñ–≤":
                bot.send_location(message.chat.id, latitude=49.9935, longitude=36.2304)
            elif city == "–í—ñ–Ω–Ω–∏—Ü—è":
                bot.send_location(message.chat.id, latitude=49.2331, longitude=28.4682)
            elif city == "–õ—å–≤—ñ–≤":
                bot.send_location(message.chat.id, latitude=49.8397, longitude=24.0297)
            elif city == "–£–∂–≥–æ—Ä–æ–¥":
                bot.send_location(message.chat.id, latitude=48.6208, longitude=22.2879)
            weather_info = get_weather(city)
            bot.send_message(message.chat.id, weather_info)
        else:
            bot.send_message(message.chat.id, "–ù–∞ –∂–∞–ª—å, —è –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–≥–æ –º—ñ—Å—Ç–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —ñ–Ω—à–µ.")

def on_polling_start():
    for chat_id in chat_ids:
        bot.send_message(chat_id, "–ë–æ—Ç –∑–Ω–æ–≤—É –∞–∫—Ç–∏–≤–Ω–∏–π! –í–∏–±–µ—Ä—ñ—Ç—å –º—ñ—Å—Ç–æ:", reply_markup=create_city_keyboard())

if __name__ == '__main__':
    on_polling_start()
    bot.polling()
